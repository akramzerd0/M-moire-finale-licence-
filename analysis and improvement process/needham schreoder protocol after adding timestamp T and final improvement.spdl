usertype Timestamp;
protocol Ace (A,B,S) {
secret Kas,Kbs:SessionKey;
        role A{
const Na,Nb-1 :Nonce;
var Nb : Nonce;
var Kab: SessionKey;
fresh T0,T:Timestamp; 

         send_1(A,S,A,B,Na,T0);
          recv_2(S,A,{B,Na,Kab,T,{Kab,A,T}Kbs}Kas);
           send_3(A,B,{Kab,A,T}Kbs);
            recv_4(B,A,{Nb,T} Kab);
             send_5(A,B,{Nb-1,T}Kab);
              claim_A1(A,Secret,Kab);
               claim_A2(A,Secret,Nb);
                claim_A3(A,Nisynch);
}
       role S{
var Na,Nb2:Nonce;
const Kab:  SessionKey;
fresh T0,T:Timestamp; 

          recv_1(A,S,A,B,Na,T0) ;
           send_2(S,A,{B,Na,Kab,T,{Kab,A,T} Kbs} Kas);
            claim_S1(S,Secret,Kab);
             claim_S2(S,Nisynch);
}
       role B{
const Nb:Nonce;
var Na,Nb-1:Nonce;
var Kab: SessionKey;
fresh T:Timestamp; 

      recv_3(A,B,{Kab,A,T} Kbs);
         send_4(B,A,{Nb,T} Kab);
           recv_5(A,B,{Nb-1,T}Kab);
             claim_B1(B,Secret,Kab);
               claim_B2(B,Secret,Nb);
                 claim_B3(B,Nisynch);
}

}
const Kab:SessionKey; 
const eve :Agent ;
untrusted eve ;
compromised Kab(eve);
